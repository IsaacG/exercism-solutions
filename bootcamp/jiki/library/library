function my#contains with iterable, item do
  for each element in iterable do
    if element == item do
      return true
    end
  end
  return false
end

function my#starts_with with string, prefix do
  set str_len to my#length(string)
  set pre_len to my#length(prefix)
  if pre_len > str_len do
    return false
  else if pre_len == str_len do
    return prefix == string
  end
  set chars to []
  for each char in prefix indexed by idx do
    if char != string[idx] do
      return false
    end
  end
  return true
end

function my#to_sentence with list, oxford_comma do
  set length to my#length(list)
  set out to ""
  if length > 0 do
    change out to list[1]
  end
  if length > 2 do
    repeat my#length(list) - 2 times indexed by idx do
      change out to concatenate(out, ", ", list[idx + 1])
    end
  end
  if length > 1 do
    if oxford_comma do
      change out to  concatenate(out, ", and ", list[length])
    else do
      change out to concatenate(out, " and ", list[length])
    end
  end
  return out
end

function my#has_key with dict, key do
  for each k, v in dict do
    if k == key do
      return true
    end
  end
  return false
end

function my#length with iterable do
  set count to 0
  for each item in iterable do
    change count to count + 1
  end
  return count
end

function my#is_digit with char do
  return my#contains("1234567890", char)
end

function my#to_int with iterable do
  set out to 0
  for each char in iterable do
    if my#is_digit(char) do
      change out to out * 10 + string_to_number(char)
    end
  end
  return out
end
